{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/logo.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","console","log","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","src","logo","image","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1525e6bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport styles from './Cards.module.css';\nimport cx from 'classnames';\n\nconst Cards = ({data: {confirmed,recovered, deaths, lastUpdate}}) => {\n    if(!confirmed){\n    return '..Loading';\n        \n    }\n    return(\n        <div className=\"styles.container\">\n            \n            <Grid container spacing={3} justify=\"center\">\n                <Grid component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp  start={0} end={recovered.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recovered cases of Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n\n                <Grid component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\" gutterBottom>{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused  by Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n    \n    if(country)\n    {\n        console.log('countries data');\n        changeableUrl = `${url}/countries/${country}`;\n        \n    }\n\n    try{\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\n        console.log('globaldtaa');\n        return {confirmed,recovered,deaths,lastUpdate};\n    }\n\n    catch(error){\n        \n    }\n}\n\nexport const fetchDailyData = async () => {\n    \n    try{\n        const {data} = await axios.get(`${url}/daily`);\n\n        const modifiedData  = data.map((dailyData) => ({\n            confirmed : dailyData.confirmed.total,\n            deaths : dailyData.deaths.total,\n            date : dailyData.reportDate,\n        }));\n\n        return modifiedData;\n    }\n\n    catch(error){\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async() => {\n    try{\n        const {data: {countries}} = await axios.get(`${url}/countries`);\n        \n        return countries.map((country) => country.name);\n        \n    }\n\n    catch(error){\n        console.log(error);\n    }\n}","import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport { Bar, Line} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data: {confirmed,recovered,deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async() => {\n            setDailyData(await fetchDailyData());\n        }\n        \n        \n        \n\n        fetchAPI();\n    }, []);\n\n    const lineChart =(\n        dailyData.length \n           ? (<Line\n            data={{\n                labels:dailyData.map(({date}) => date),\n                datasets: \n                [{\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label:'Infected',\n                    borderColor: '#3333ff',\n                    fill : true,\n                }, \n                {\n                        data: dailyData.map(({deaths}) => deaths),\n                        label:'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255,0,0,0.5)',\n                        fill : true,\n                    }],\n            }}/>) : null\n    );\n\n    console.log('bardata');\n    console.log(confirmed,recovered,deaths);\n\n    const barChart =(\n        confirmed ?(\n        <Bar\n            data={{\n                labels: ['Infected','Recovered','Deaths'],\n                datasets:[{\n                    \n                    label:'People',\n                \n                    backgroundColor:[\n                        'rgba(0,0,255,0.5',\n                        'rgba(0,255,0,0.5',\n                        'rgba(0,0,255,0.5',\n                    ],\n                    data:[confirmed.value,recovered.value,deaths.value]\n                }]\n            }}\n\n            options={{\n                legend: {display: false},\n                title: {display:true, text:`Current state in ${country}`}\n            }}\n            />): null\n    );\n\n            \n    return(\n        <div className={styles.container}>\n            {country ? barChart:lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport styles from './CountryPicker.module.css';\nimport {fetchCountries} from '../../api';\nimport {FormControl,NativeSelect} from '@material-ui/core';\n\n\n\nconst CountryPicker = ({handleCountryChange}) => {\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n       const fetchAPI = async() => {\n        setFetchedCountries(await fetchCountries());\n       }\n\n       fetchAPI();\n   \n   }, [setFetchedCountries]);\n\n   \n   \n\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => \n                    <option value={country} key={i}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/logo.9e5d4fc7.png\";","import styles from './App.module.css';\nimport {Cards,Chart,CountryPicker} from './components';\nimport {fetchData} from './api';\nimport React from 'react';\nimport logo from './images/logo.png';\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country: ''\n  }\n\n\n  async componentDidMount(){\n    \n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n \n  }\n\n  handleCountryChange = async(country) =>{\n    \n    const fetchedData =  await fetchData(country)\n    this.setState({ data: fetchedData, country : country });\n    console.log(country)\n  }\n  \n\n  render(){\n    const {data,country} =this.state;\n  return (\n    <div className={styles.container}>\n      <img src={logo} className={styles.image} alt=\"logo\"/>\n      <Cards data={data}/>\n      <CountryPicker handleCountryChange={this.handleCountryChange}/>\n      <Chart country ={country} data={data}/>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}